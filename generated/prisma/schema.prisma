generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(cuid())
  name           String
  username       String?   @unique
  image          String?
  email          String    @unique
  hashedPassword String
  salt           String
  createdAt      DateTime  @default(now())
  posts          Post[]
  followers      Follow[]  @relation("followers")
  following      Follow[]  @relation("following")
  likes          Like[]
  comments       Comment[]
  stories        Story[]
  profilePic     String?
}

model Post {
  id        String    @id @default(cuid())
  caption   String?
  mediaUrl  String
  mediaType String
  user      User      @relation(fields: [userId], references: [id])
  userId    String
  likes     Like[]
  comments  Comment[]
  createdAt DateTime  @default(now())
}

model Follow {
  id          String   @unique
  followerId  String
  followingId String
  createdAt   DateTime @default(now())
  follower    User     @relation("following", fields: [followerId], references: [id])
  following   User     @relation("followers", fields: [followingId], references: [id])

  @@unique([followerId, followingId])
}

model Like {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId    String
  createdAt DateTime @default(now())

  @@unique([userId, postId])
}

model Comment {
  id        String   @id @default(cuid())
  content   String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId    String
  createdAt DateTime @default(now())
}

model Story {
  id        String   @id @default(cuid())
  mediaUrl  String
  mediaType String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime @default(now())
  expiresAt DateTime
}
